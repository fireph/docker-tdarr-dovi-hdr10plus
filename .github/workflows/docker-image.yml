name: Dockerimage Main

on:
  schedule:
    - cron: '21 8 * * *'
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/docker-image.yml"
      - "Dockerfile"
  workflow_dispatch:

jobs:
  tdarr-dovi-hdr10plus:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: 'main'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_NAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Fetch version tags
        id: fetch_tags
        run: |
          DOVI_TOOL_TAG=$(curl -s https://api.github.com/repos/quietvoid/dovi_tool/releases/latest | grep -oP '(?<="tag_name": ")[^"]*')
          HDR10PLUS_TOOL_TAG=$(curl -s https://api.github.com/repos/quietvoid/hdr10plus_tool/releases/latest | grep -oP '(?<="tag_name": ")[^"]*')

          echo "DOVI_TOOL_TAG=${DOVI_TOOL_TAG}" >> $GITHUB_ENV
          echo "HDR10PLUS_TOOL_TAG=${HDR10PLUS_TOOL_TAG}" >> $GITHUB_ENV

      - name: Fetch tdarr_node digest
        id: fetch_digest
        run: |
          docker pull haveagitgat/tdarr_node:latest 2>/dev/null
          TDARR_NODE_DIGEST=$(docker inspect --format='{{.Id}}' haveagitgat/tdarr_node:latest)

          echo "TDARR_NODE_DIGEST=${TDARR_NODE_DIGEST}" >> $GITHUB_ENV

      - name: Construct version fingerprint
        id: version_info
        run: |
          FINGERPRINT="${DOVI_TOOL_TAG}-${HDR10PLUS_TOOL_TAG}-${TDARR_NODE_DIGEST}"
          echo "FINGERPRINT=${FINGERPRINT}" >> $GITHUB_OUTPUT

      - name: Ensure version-check dir exists
        run: mkdir -p version-check

      - name: Restore version-check cache
        id: restore_cache
        uses: actions/cache/restore@v4
        with:
          path: version-check
          key: ${{ steps.version_info.outputs.FINGERPRINT }}

      - name: Check if fingerprint is cached
        if: steps.restore_cache.outputs.cache-hit == 'true'
        run: echo "Cache was hit, so we already have version-check/fingerprint."

      - name: Build and push Docker image
        if: steps.restore_cache.outputs.cache-hit != 'true'
        id: build_and_push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: dungfu/tdarr-dovi-hdr10plus:latest
          build-args: |
            DOVI_TOOL_TAG=${{ env.DOVI_TOOL_TAG }}
            HDR10PLUS_TOOL_TAG=${{ env.HDR10PLUS_TOOL_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save version-check cache
        if: steps.restore_cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: version-check
          key: ${{ steps.version_info.outputs.FINGERPRINT }}
